@page
@model VolunteeringWebsite.DetailsModel

@using Microsoft.AspNetCore.Identity
@using VolunteeringWebsite.Areas.Identity.Data

@inject UserManager<VolunteeringWebsiteUser> UserManager

@{
    ViewData["Title"] = "Details";
    var user = await UserManager.GetUserAsync(User);
}

<div class="padding-different">
    <h1>Details</h1>

    <div>
        <hr />
        @if (user != null && !user.IsAdmin)
        {
            <div class="text-right">
                @if (!Model.IsFinished)
                {
                    <button class="btn btn-outline-success"
                            id="btn-apply"
                            onclick="applyClick()">
                        Apply Now
                    </button>
                    <button class="btn btn-outline-primary"
                            id="btn-fav"
                            onclick="addToFavClick()">
                        Add to Favourites
                    </button>
                }
                

            </div>
        }
        <dl class="row width-full">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Project.Name)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Project.Name)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Project.StartDate)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Project.StartDate)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Project.EndDate)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Project.EndDate)
            </dd>
            @if (Model.Place != "home")
            {
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Project.Location)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Project.Location.FullName)
                </dd>
            }
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Project.Topic)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Project.Topic.Name)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Project.Description)
            </dt>
            <dd class="col-sm-10">
                @Html.TextAreaFor(model => model.Project.Description, 7, 100, new { @readonly = true })
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Project.Activities)
            </dt>
            <dd class="col-sm-10">
                @Html.TextAreaFor(model => model.Activities, 7, 100, new { @readonly = true })
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.ProjectLanguage)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.ProjectLanguage)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.ProjectSkills)
            </dt>
            <dd class="col-sm-10">
                @Html.TextAreaFor(model => model.ProjectSkills, 5, 100, new { @readonly = true })
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Project.CoinsGiven)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Project.CoinsGiven)
            </dd>
        </dl>
    </div>
    <div class="text-right">
        @if (Model.IsApplied)
        {
            <button class="btn btn-lg bg-purple text-white hover-purple"
                    id="btn-fin"
                    onclick="finClick()">
                Finish Project
            </button>
        }
    </div>
    <div>
        @if (user != null && user.IsAdmin)
        {
            <a asp-page="./Edit" asp-route-id="@Model.Project.Id" asp-route-place=@Model.Place>Edit</a>
            <span> | </span>
        }
        <a asp-page="./Index" asp-route-place=@Model.Place>Back to List</a>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        function applyClick() {
            $.ajax({
                type: 'POST',
                url: '/Projects/Details/?handler=Apply&id=@Model.Project.Id',
                headers: {
                    RequestVerificationToken:
                        $('input:hidden[name="__RequestVerificationToken"]').val()
                }
            }).done(function (result) {
                if (result.applied) {
                    createOkWindow('Thank you for applying! You will receive an email message as soon as the organisatioin accepts your application.');
                    setApplyButton(false);
                } else {
                    createOkWindow('Failed to apply!');
                }
            });
        }

        function addToFavClick() {
            $.ajax({
                type: 'POST',
                url: '/Projects/Details/?handler=AddToFavourite&id=@Model.Project.Id',
                headers: {
                    RequestVerificationToken:
                        $('input:hidden[name="__RequestVerificationToken"]').val()
                }
            }).done(function (result) {
                if (result.added) {
                    setFavButton(true);
                    showSnack('The project is added to favourites!');
                } else if (result.removed) {
                    setFavButton(false);
                    showSnack('The project is removed from favourites!');
                } else {
                    showSnack('Failed to set favourite!');
                }
            });
        }

        function finClick() {
            $.ajax({
                type: 'POST',
                url: '/Projects/Details/?handler=Finish&id=@Model.Project.Id',
                headers: {
                    RequestVerificationToken:
                        $('input:hidden[name="__RequestVerificationToken"]').val()
                }
            }).done(function (result) {
                if (result.finished) {
                    setFinButton(false);
                    createOkWindow('The project is finished!');
                } else {
                    showSnack('Failed to finish!');
                }
            });
        }

        function setFinButton(enabled) {
            var b = $('#btn-fin');
            b.prop('disabled', !enabled);

            if (enabled) {
                b.html("Finish");
            } else {
                b.html("Finished");
            }
        }

        function setApplyButton(enabled) {
            var b = $('#btn-apply');
            b.prop('disabled', !enabled);

            if (enabled) {
                b.html("Apply Now");
                $('#btn-fav').prop('disabled', false);
            } else {
                b.html("Applied");
                $('#btn-fav').prop('disabled', true);
                setFavButton(false);
            }
        }

        function setFavButton(isFav) {
            var b = $('#btn-fav');

            if (isFav) {
                b.html("Favourite");
            } else {
                b.html("Add to Favourites");
            }
        }

        setFavButton(@((Model.IsFavourite || Model.IsFinished).ToString().ToLower()));
        setApplyButton(@((!Model.IsApplied && !Model.IsFinished).ToString().ToLower()));
        if (@Model.IsApplied.ToString().ToLower())
            setFinButton(@((!Model.IsFinished).ToString().ToLower()));

    </script>
}